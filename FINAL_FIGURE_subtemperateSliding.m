%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FIGURE: Subtemperate Sliding Model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Author: Logan E. Mann, Thayer School of Engineering, Dartmouth College

% R13 box model with subtemperate sliding. Written with a nondimensional 
% implementation, in an ISSM-like syntax. Creates two figures: 1) results
% of the R13 box model, without subtemperate sliding, 2) results of the R13
% box model with subtemperate sliding ($T_0 = 10$).

clear
clc


%% NON-SUBTEMPERATE RUN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    md = R13;
    %% PARAMETERS
        md=parameterize(md);
        md.parameters.xi = 0.00;
        md.parameters.Ts = 273.15-30;
        md.parameters.G = 0.03;
    
    %% INITIAL CONDITIONS
        md = initialize(md);
    
    %% SOLVE
        md = solve_R13(md);

%% SUBTEMPERATE RUN
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    md2 = R13;
    %% PARAMETERS
        md2=parameterize(md2);
        md2.parameters.xi = 0.01;
        md2.parameters.Ts = 273.15-30;
        md2.parameters.G = 0.03;
        md2.parameters.T_0 = 10;
    
    %% INITIAL CONDITIONS
        md2 = initialize(md2);
    
    %% SOLVE
        md2 = solve_R13(md2);
%% PLOTTING
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    list_factory = fieldnames(get(groot,'factory'));
    index_interpreter = find(contains(list_factory,'Interpreter'));
    for i = 1:length(index_interpreter)
        default_name = strrep(list_factory{index_interpreter(i)},'factory','default');
        set(groot, default_name,'latex');
    end
    %% Non-Subtemperate
        close all
        figure
        sty = styleGuide();
        sty.LineWidth = 0.75;
        tcl = tiledlayout(3,1);
        tcl.TileSpacing = sty.TileSpacing;
        tcl.Padding = sty.Padding;
        
        
        % Subplot 1: h
        s1=nexttile(tcl);
            plot(md.results.time/md.parameters.yearCon/1000, md.results.h,...       % Plot h without subtemperate sliding
                '-k','LineWidth',sty.LineWidth)
            set(s1,'FontSize',sty.FontSize, ...
                'LineWidth', sty.LineWidth, ...
                'TickDir',sty.TickDir, ...
                'TickLength',sty.TickLength,...
                'XTickLabel',{}, ...
                'XMinorTick',sty.XMinorTick, ...
                'YMinorTick',sty.YMinorTick,...
                'XLim', [5 60],...
                'YLim', [500 2900],...
                'Box','off')
            ylabel('$h$ (m)','FontSize',sty.LabelFontSize)
            text(0.01, 0.9,'a)',...
                'Interpreter','latex',...
                'Units','normalized',...
                'FontSize',sty.LabelFontSize)
            
        % Subplot 2: u_b
        s2 = nexttile(tcl,2);
            ub1=md.results.ub;                  % velocity during stagnant phase
            ub1(md.results.ub_surge==0)=0;
            ub2=md.results.ub;                  % velocity during surge
            ub2(md.results.ub_surge~=0)=0;
            semilogy(md.results.time./md.parameters.yearCon/1000,ub2.*md.parameters.yearCon,...     % Plot stagnant velocity
                '-','Color',[0.5 0.5 0.5],'LineWidth',sty.LineWidth)
            hold on
            semilogy((md.results.time)./md.parameters.yearCon/1000,ub1.*md.parameters.yearCon,...   % Plot surge velocity
                'k-','LineWidth',sty.LineWidth)
            set(s2,'FontSize',sty.FontSize, ...
                'LineWidth', sty.LineWidth, ...
                'TickDir',sty.TickDir, ...
                'TickLength',sty.TickLength,...
                'XTickLabel',{}, ...
                'XMinorTick',sty.XMinorTick, ...
                'YMinorTick','on',...
                'XLim', [5 60],...
                'YLim', [10^(-1) 20000],...
                'YTick',[0.1 1 10 100 1000 10000],...
                'YTickLabel',{'$0$','$10^{0}$', '$10^{1}$', '$10^{2}$', '$10^{3}$', '$10^{4}$'},...
                'Box','off')
            ylabel('$u_b$ (m a$^{-1}$)','FontSize',sty.LabelFontSize)
            text(0.01, 0.9,'b)',...
                'Interpreter','latex',...
                'Units','normalized',...
                'FontSize',sty.LabelFontSize)
        
        % Subplot 3: T_b, w
        s3 = nexttile(tcl,3);
            colororder({'b','r'})
            yyaxis left
            plot((md.results.time)./md.parameters.yearCon/1000,md.results.w,...
                '-b','LineWidth',sty.LineWidth)
            ylim([0 1])
            hold on
            yyaxis right
            plot(md.results.time./md.parameters.yearCon/1000,md.results.Tb-273.15,...
                '-r','LineWidth',sty.LineWidth)
            ylim([-20 2.5])
            set(s3,'FontSize',sty.FontSize, ...
                'LineWidth', sty.LineWidth, ...
                'TickDir',sty.TickDir, ...
                'TickLength',sty.TickLength,...
                'XMinorTick',sty.XMinorTick, ...
                'YMinorTick',sty.YMinorTick,...
                'XTick',5:5:60, 'XTickLabel', {'   ', '   ', '   ', '   ', '   ', '   ', '   ', '   ', '   ', '   ', '   ', '   '},...
                'XLim', [5 60],...
                'Box','off')
            ylabel('$T_b$ ($^{\circ}$ C)','FontSize',sty.LabelFontSize)
            yyaxis left
            text(0.01, 0.9,'c)','Interpreter','latex','Units','normalized','FontSize',sty.LabelFontSize)
            % xlabel('time (kyr)', 'FontSize', sty.LabelFontSize)
            xlabel('time (kyr)', 'FontSize', sty.LabelFontSize,'Color','w')       % Make a blank x label to make figure dimensions consistent
            ylabel('$w$ (m)', 'FontSize', sty.LabelFontSize)
            sgtitle('\textbf{No Subtemperate Sliding ($\xi = 0$):}','FontSize',sty.LabelFontSize,'Interpreter','latex')
        
        % Figure Formatting/Export
            width = sty.Width;
            set(gcf,'Units','inches')
            set(gcf,'Position',[4 4 width width/(16/9)])
            
            figureName = 'subtemperateSliding_vert1.pdf';                       % Save Figure
            exportgraphics(gcf,['./figures/' figureName],...
                'BackgroundColor', 'none',...
                'ContentType', 'vector');

    %% Subtemperate
        figure
        sty = styleGuide();
        sty.LineWidth = 0.75;
        tcl = tiledlayout(3,1);
        tcl.TileSpacing = sty.TileSpacing;
        tcl.Padding = sty.Padding;
        
        % Subplot 4: h
        s4=nexttile(tcl,1);
            plot(md2.results.time/md2.parameters.yearCon/1000, md2.results.h,...
                '-k','LineWidth',sty.LineWidth)
            set(s4,'FontSize',sty.FontSize, ...
                'LineWidth', sty.LineWidth, ...
                'TickDir',sty.TickDir, ...
                'TickLength',sty.TickLength,...
                'XTickLabel',{}, ...
                'XMinorTick',sty.XMinorTick, ...
                'YMinorTick',sty.YMinorTick,...
                'XLim', [5 60],...
                'YLim', [500 2900],...
                'Box','off')
            text(0.01, 0.9,'d)',...
                'Interpreter','latex',...
                'Units','normalized',...
                'FontSize',sty.LabelFontSize)
            ylabel('$h$ (m)','FontSize',sty.LabelFontSize)

        % Subplot 5: ub
        s5 = nexttile(tcl,2);
            ub1=md2.results.ub;
            ub1(md2.results.ub_surge==0)=0;
            ub2=md2.results.ub;
            ub2(md2.results.ub_surge~=0)=0;
            semilogy(md2.results.time./md2.parameters.yearCon/1000,ub2.*md2.parameters.yearCon,'-','Color',[0.5 0.5 0.5],'LineWidth',sty.LineWidth)
            hold on
            semilogy(md2.results.time./md2.parameters.yearCon/1000, ub1.*md2.parameters.yearCon,'k-','LineWidth',sty.LineWidth)
            ylim([10^(-1) 20000])
            set(s5,'FontSize',sty.FontSize, ...
                'LineWidth', sty.LineWidth, ...
                'TickDir',sty.TickDir, ...
                'TickLength',sty.TickLength,...
                'XTickLabel',{}, ...
                'YTick',[0.1 1 10 100 1000 10000],'YTickLabel',{'$0$','$10^{0}$', '$10^{1}$', '$10^{2}$', '$10^{3}$', '$10^{4}$'},...
                'XMinorTick',sty.XMinorTick, ...
                'YMinorTick','on',...
                'XLim', [5 60],...
                'Box','off')
            text(0.01, 0.9,'e)','Interpreter','latex','Units','normalized','FontSize',sty.LabelFontSize)
            l = legend('Stagnant Phase', 'Surge Phase','FontSize',sty.FontSize,'Orientation','horizontal','Location','south','Box','off');
            l.Position  = [0.281580433012947,0.42,0.452712240673247,0.06501766818151];
            ylabel('$u_b$ (m a$^{-1}$)','FontSize',sty.LabelFontSize)
        
        % Subplot 6: w, Tb
        s6 = nexttile(tcl,3);
            colororder({'b','r'})
            yyaxis left
            plot((md2.results.time)./md2.parameters.yearCon/1000,md2.results.w,'-b','LineWidth',sty.LineWidth)
            ylim([0 1])
            hold on
            yyaxis right
            plot(md2.results.time./md2.parameters.yearCon/1000,md2.results.Tb-273.15,'-r','LineWidth',sty.LineWidth)
            ylim([-20 2.5])
            set(s6,'FontSize',sty.FontSize, ...
                'LineWidth', sty.LineWidth, ...
                'TickDir',sty.TickDir, ...
                'TickLength',sty.TickLength,...
                'XMinorTick',sty.XMinorTick, ...
                'YMinorTick',sty.YMinorTick,...
                'XLim', [5 60],...
                'XTick',5:5:60,...
                'XTickLabel', {'5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '60'},...
                'Box','off')
            yyaxis right
            xlabel('time (kyr)','FontSize',sty.LabelFontSize)
            ylabel('$T_b$ ($^{\circ}$ C)','FontSize',sty.LabelFontSize)
            text(0.01, 0.9,'f)','Interpreter','latex','Units','normalized','FontSize',sty.LabelFontSize)
            yyaxis left
            ylabel('$w$ (m)', 'FontSize', sty.LabelFontSize)
            sgtitle('\textbf{Subtemperate Sliding ($\xi = 0.01$):}',...
                'FontSize',sty.LabelFontSize,...
                'Interpreter','latex')
        
        % Figure Formatting/Export
            width = sty.Width;
            set(gcf,'Units','inches')
            set(gcf,'Position',[4 4 width width/(16/9)])
            
            figureName = 'subtemperateSliding_vert2.pdf';                       % Save Figure
            exportgraphics(gcf,['./figures/' figureName],...
                'BackgroundColor', 'none',...
                'ContentType', 'vector');